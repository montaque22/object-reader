{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 613c54d1f6a741354dbf","webpack:///./src/js/object-reader.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ,aAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,kBAAkB,eAAe;AACjC;AACA;AACA;AACA;;AAEA;AACA;;;;;AAKA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,eAAe;AACrC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uBAAuB,QAAQ;AAC/B,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ,aAAa,OAAO,YAAY,KAAK;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,OAAO;AACrC,+BAA+B,IAAI;AACnC,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,QAAQ,aAAa,QAAQ,KAAK,GAAG,WAAW;AAC9G;AACA;AACA,qEAAqE,IAAI,YAAY,MAAM,aAAa,QAAQ;AAChH;AACA;AACA;AACA;AACA,qEAAqE,QAAQ,aAAa,QAAQ;AAClG;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yBAAyB;AACzB;AACA,yBAAyB;AACzB;AACA;;AAEA,qBAAqB;;AAErB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,yBAAyB;AACzB;AACA,yBAAyB;AACzB;AACA;;AAEA,qBAAqB;;AAErB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,0BAA0B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT","file":"object-reader.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 613c54d1f6a741354dbf","'use strict';\n/**\n * @author Michael Montaque on 8/14/16.\n *\n * @overview\n * ObjectReader is a class that allows you to access the properties of objects and arrays without fear of having\n * illegal access errors It also allows you to quickly add data and construct your object using simple string dot\n * notation.\n *\n * @example <caption>Install Via NPM</caption>\n * npm install --save montaque-objectreader\n *\n * @example <caption>Install Via Bower</caption>\n * bower install montaque-objectreader\n *\n * @example <caption>Other</caption>\n * // Or just download and place the object-reader.js file in your directory and enjoy.\n *\n */\n\n\n\n/**\n * @namespace montaque\n */\n// var montaque        = montaque || {};\n// var ObjectReader    = null;\n\n\n/**\n * @memberof montaque\n *\n * @description\n * Takes in a source object such as an array or object. Even if the source object is updated the ObjectReader\n * is pointing to the original and will contain the updated values\n *\n * @example\n * var obj = {a:1, b:{c:'test', d:{e:'me'}}}\n * var reader = new ObjectReader(obj);\n *\n * // alternatively\n * var reader = new montaque.ObjectReader(obj)\n *\n * // or if you have npm\n * var ObjectReader = require('ObjectReader');\n * var reader = new ObjectReader(obj)\n *\n * // or if you are using angular\n * angular.modules(<YOUR-APP-NAME>, ['montaque.objectreader']).run(['ObjectReader' function(ObjectReader){\n *      var reader = new ObjectReader(obj)\n * }])\n *\n * @param source {Object | Array} the object or array to inspect\n * @constructor\n */\nexport function ObjectReader(source){\n    var _source = source;\n\n    verifySource();\n    runPolyfills();\n\n\n\n\n    /**\n     * Returns whether or not the reader has a source associated with it\n     * @returns {boolean}\n     */\n    this.doesSourceExists = function(){\n        return !!_source;\n    };\n\n    /**\n     * sets the source of the reader. (The source is the object that will be read.)\n     * @param source {Object | Array} changes the source of the reader to the value provided\n     */\n    this.setSource = function(source){\n        var didPass = verifySource(source, true);\n\n        if(didPass)\n            _source = source;\n\n        return didPass\n    };\n\n    /**\n     * Returns the source as given or as an array of objects.\n     * @param asArray {Boolean} If true will return source as array\n     * @returns {Object | Array} returns the ObjectReader's source. NOTE: the returned source is a deep clone of the\n     * original so it can be manipulated without mutating the original\n     */\n    this.getSource = function(asArray){\n        var obj = null;\n        if(Array.isArray(_source)){\n            return Array.clone(_source)\n        }else if(Object.isObject(_source)){\n            obj = Object.clone(_source)\n        }\n\n        var keys    = asArray && !!obj && Object.keys(obj) || [];\n\n        keys.forEach(function(key){\n            if(!Array.isArray(obj))\n                obj = [];\n            obj.push(_source[key]);\n        });\n\n        return obj;\n    };\n\n    /**\n     * This method allows you to read into an object many levels deep using a string dot notation. If you try to\n     * access properties from undefined members it will return undefined or whatever you tell it to return in the\n     * defaultProperty param. You can also access array members by referring to the index in the dot notation.\n     *\n     * @example\n     *  var obj = {a:1, b:{c:'test', d:{e:'me'}, f:[30,29,{g:31}]}}\n     *  var reader = new ObjectReader(obj);\n     *  reader.inspect('a')                         // -> 1\n     *  reader.inspect('b.c')                       // -> 'test'\n     *  reader.inspect('b.d.e')                     // -> 'me'\n     *  reader.inspect('b.f.2.g')                   // -> 31\n     *  reader.inspect(b.d.f.g, 'Does not exist')   // -> 'Does not exist'\n     *\n     * @param propertyString {String}   Dot notations string path to the key you want to access\n     * @param defaultProperty {any}     value you want to return if the accessed key is non-existent\n     * @returns {any}\n     */\n    this.inspect = function(propertyString, defaultProperty){\n        var propertyArray = propertyString.split('.');\n        var intermediate = _source;\n\n        propertyArray.forEach(function(property){\n            if(intermediate){\n                intermediate = intermediate[property];\n            }\n        });\n\n        if((intermediate === undefined || intermediate === null) && defaultProperty !== undefined)\n            return defaultProperty;\n        return  intermediate;\n    };\n\n\n    /**\n     * Sets the given value to the key dictated by the keyString using recursion. If isStrict is set to true then the\n     * function will fail and return false when trying to set a value to illegal objects or if the path dictated by\n     * the keyString does not exist. If successful, this method mutates the original object (source).\n     *\n     * @example\n     *  var obj = {a:1, b:{c:'test', d:{e:'me'}}}\n     *  var reader = new ObjectReader(obj);\n     *\n     *  // To set a new value at an existing key path\n     *  reader.inject('b.c', 3)   // true  ( obj.b.c -> 3 )\n     *\n     *  // To set a new value at a shallow non-existent path\n     *  reader.inject('b.d.f', 'new value' )   // true ( obj.b.d.f -> 'new value' )\n     *\n     *  // To set a new value at a deep non-existent path\n     *  reader.inspect('e.f.g', 'created')          // true ({a:1, b:{c:'test', d:{e:'me'}}, e:{f:{g:created}})\n     *\n     *  // You can also set arrays by using number\n     *  reader.inspect(a.0.b.0, 'exist')            // true (obj -> {a:[{b:['exist']}], b:{c:'test', d:{e:'me'}})\n     *\n     *  // To safely set a new value at a deep non-existent path without unexpected mutations\n     *  reader.inspect('b.c.d', 'fail', true)       // false (obj.b.c.d does not exist so nothing happens)\n     *  reader.inspect('e.f.g', 'fail', true)       // false (obj.e does not exist so nothing happens)\n     *  reader.inspect('e', 'pass', true)           // true (obj -> {a:1, b:{c:'test', d:{e:'me'}}, e:'pass')\n     *\n\n     *\n     * @param keyString     - Path (Denoted in string dot notation) of where to set the value\n     * @param value         - value you want to set\n     * @param isStrict      - protects the object from unintended mutations.\n     * @returns {Boolean}   - Returns true if successful.\n     */\n    this.inject = function(keyString, value, isStrict){\n\n        // Make sure a source exists\n        if(!_source){\n            throw  new Error(\"Please set a source. (use setSource method)\")\n        }\n\n        // get the keys & source\n        var propertyArray = keyString.split('.');\n        var intermediate = _source;\n\n\n        // uses recursion to mutate the object\n        return  helper(intermediate, propertyArray, value);\n\n        /*\n         * initialized the object based on the given key. If the key is numerical then it will initialize an array.\n         * otherwise it will init an object.\n         *\n         * @param data\n         * @param key\n         */\n        function setup(data, key){\n            var num = parseFloat(key);\n\n            if(isNaN(num)){\n                data[key] = {}\n            }else{\n                data[key] = []\n            }\n        }\n\n        /*\n         * Stores the data at the specified key. If strict and if a number key is given then the source must be an\n         * array.\n         *\n         * @param source\n         * @param key\n         * @param data\n         * @returns {boolean}\n         */\n        function adjust(source, key, data){\n\n            // Returns a number or NaN\n            var num = parseFloat(key);\n            var didComplete = true;\n\n            // If strict and the source is an array then make sure the keys are numerical. otherwise pretend it's object\n            if(source instanceof Object && isStrict)\n\n                if(Array.isArray(source) && !isNaN(num) || !Array.isArray(source))\n                    source[key] = data;\n\n                else\n                // If failed set to false\n                    didComplete = false;\n\n\n            else if (source instanceof Object)\n                source[key] = data;\n\n            else\n                didComplete =  false;\n\n            return didComplete;\n        }\n\n        /*\n         * Utilizes recursion to store the given input at the specified key.\n         * @param source\n         * @param keys\n         * @param input\n         * @returns {Boolean}\n         */\n        function helper(source, keys, input) {\n\n            // get the first key and remove it from the array\n            var key =  keys.shift();\n\n            // if this is the last key set the value\n            if(keys.length === 0)\n                return adjust(source, key, input);\n\n            // cache the data\n            var data = source[key];\n\n            if(isStrict && (!data || !(data instanceof Object)))\n            // if strict and no data exist, leave.\n                return false;\n\n            else if(!data || !(data instanceof Object))\n            // if not strict and no data exist or if primitive\n                setup(source, key);\n\n            // Recurse!!\n            return helper(source[key], keys, input)\n\n        }\n\n    };\n\n\n    /*\n        Make sure the source is of an acceptable type\n     */\n    function verifySource(source, suppressError){\n        source = source || _source;\n\n        switch(typeof source){\n            case 'number':\n            case 'string':\n                if(suppressError)\n                    return false;\n                throw new Error( typeof source + ' is not a acceptable parameter for the ObjectReader')\n            default:\n                return true;\n        }\n    }\n\n    /*\n     * Setup all the polyfills needed to run this framework\n     */\n    function runPolyfills(){\n\n        // adds Object.isObject\n        objectTruthyPolyfill();\n\n        // adds Object.clone\n        objectClonePolyfill();\n\n        // add Array.clone\n        arrayClonePolyfill();\n\n        // polyfill for Object.assign\n        polyfill();\n\n        function objectTruthyPolyfill(){\n            if (typeof Object.isObject != 'function') {\n                Object.isObject = function(target){\n                    return Object.prototype.toString.call( target ) === '[object Object]'\n                }\n            }\n        }\n\n        function objectClonePolyfill(){\n            if (typeof Object.clone != 'function') {\n\n                Object.clone = function(target) {\n                    if (!Object.isObject(target)) {\n                        throw new Error(\"target needs to be an object\")\n                    }\n\n                    var keys = Object.keys(target);\n                    var copy = {};\n\n                    keys.forEach(function(key){\n                        var val = target[key];\n\n                        if(Object.isObject(val)){\n                            copy[key] = Object.clone(val)\n                        }else if(Array.isArray(val)){\n                            copy[key] = Array.clone(val)\n                        }else{\n                            copy[key] = val;\n                        }\n\n                    });\n\n                    return copy;\n                }\n            }\n        }\n\n        function arrayClonePolyfill(){\n            if (typeof Array.clone != 'function') {\n\n                Array.clone = function(target) {\n                    var copy = [];\n\n                    if (!Array.isArray(target)) {\n                        throw new Error(\"target needs to be an Array\")\n                    }\n\n                    target.forEach(function(val, idx){\n\n                        if(Object.isObject(val)){\n                            copy[idx] = Object.clone(val)\n                        }else if(Array.isArray(val)){\n                            copy[idx] = Array.clone(val)\n                        }else{\n                            copy[idx] = val;\n                        }\n\n                    });\n\n                    return copy;\n                }\n            }\n        }\n\n        function polyfill(){\n            if (typeof Object.assign != 'function') {\n                Object.assign = function(target) {\n                    'use strict';\n                    if (target == null) {\n                        throw new TypeError('Cannot convert undefined or null to object');\n                    }\n\n                    target = Object(target);\n                    for (var index = 1; index < arguments.length; index++) {\n                        var source = arguments[index];\n                        if (source != null) {\n                            for (var key in source) {\n                                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                                    target[key] = source[key];\n                                }\n                            }\n                        }\n                    }\n                    return target;\n                };\n            }\n        }\n    }\n};\n\n\nif(typeof angular === 'object'){\n    angular.module('montaque.objectreader',[]);\n\n    angular.module('montaque.objectreader')\n        .provider('ObjectReader', [ function(){\n\n            this.$get = function(){\n\n                return ObjectReader\n            }\n        }])\n}\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/object-reader.js\n// module id = 0\n// module chunks = 0"],"sourceRoot":""}